


ARM Macro Assembler    Page 1 


    1 00000000                 area             program2, code,readonly
    2 00000000                 entry
    3 00000000         start
    4 00000000         
    5 00000000 E3A0000A        mov              r0,#10
    6 00000004 E3A0100B        mov              r1,#11
    7 00000008 E3A0200C        mov              r2,#12
    8 0000000C E3A0300D        mov              r3,#13
    9 00000010 E3A0400E        mov              r4,#14
   10 00000014 E3A0500F        mov              r5,#15
   11 00000018 E3A06010        mov              r6,#16
   12 0000001C E3A07011        mov              r7,#17      ; store value in ea
                                                            ch register
   13 00000020 E3A090A0        mov              r9,#160     ; for GCD
   14 00000024         
   15 00000024 EB000003        BL               doRegister  ; go to doRegister 
                                                            function and return
                                                            
   16 00000028         
   17 00000028 EB000018        BL               doGCD       ; go to doGCD funct
                                                            ion and return
   18 0000002C E08AA004        add              r10,r10,r4  ; addition GCD and 
                                                            old r4
   19 00000030 E58DA000        str              r10, [sp]   ;store value in mem
                                                            ory
   20 00000034 E3A0F000        mov              pc,#0       ;end
   21 00000038         
   22 00000038         
   23 00000038         doRegister
   24 00000038 E59FD064        LDR              sp, tempaddr1 ; decide stack po
                                                            inter
   25 0000003C         
   26 0000003C E8AD00FF        stmea            sp!, {r0-r7} ; store each regis
                                                            ter in stack using
   27 00000040         ; Empty ascending
   28 00000040         ;update
   29 00000040 E93D0038        ldmea            sp!, {r3-r5}
   30 00000044 E93D0085        ldmea            sp!, {r7,r2,r0}
   31 00000048 E93D0042        ldmea            sp!, {r6,r1}
   32 0000004C         ; load each register from stack to new register
   33 0000004C         ; using empty ascending
   34 0000004C E2800000        add              r0,r0,#0
   35 00000050 E2811001        add              r1,r1,#1
   36 00000054 E2822002        add              r2,r2,#2
   37 00000058 E2833003        add              r3,r3,#3
   38 0000005C E2844004        add              r4,r4,#4
   39 00000060 E2855005        add              r5,r5,#5
   40 00000064 E2866006        add              r6,r6,#6
   41 00000068 E2877007        add              r7,r7,#7    ;ri = ri + i(0<=i<=
                                                            7)
   42 0000006C         
   43 0000006C E0801001        add              r1,r0,r1
   44 00000070 E0812002        add              r2,r1,r2
   45 00000074 E0823003        add              r3,r2,r3
   46 00000078 E0834004        add              r4,r3,r4
   47 0000007C E0845005        add              r5,r4,r5
   48 00000080 E0856006        add              r6,r5,r6
   49 00000084 E086A007        add              r10,r6,r7   ; r10 = addition fr
                                                            om new r0 to r7



ARM Macro Assembler    Page 2 


   50 00000088         
   51 00000088 E8BD00FF        ldmfd            sp!, {r0-r7} ; load data before
                                                             update from r0 to 
                                                            r7
   52 0000008C         
   53 0000008C E1A0F00E        MOV              pc,lr
   54 00000090         
   55 00000090         doGCD                                ; calculate GCD of 
                                                            two number
   56 00000090 E15A0009        cmp              r10,r9      ;compare r10,r9
   57 00000094 C04AA009        SUBGT            r10,r10,r9  ;if(r10>r9) r10 = r
                                                            10 - r9
   58 00000098 B049900A        SUBLT            r9,r9,r10   ;if(r9>r10) r9 = r9
                                                             - r10
   59 0000009C 1AFFFFFB        BNE              doGCD       ;if(r10 != r9) go t
                                                            o doGCD
   60 000000A0 E1A0F00E        MOV              pc,lr       ;if find GCD return
                                                             to main
   61 000000A4         
   62 000000A4         
   63 000000A4 00040000 
                       tempaddr1
                               DCD              0x00040000
   64 000000A8         
   65 000000A8         end
   66 000000A8         
                       
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\program2.d -o.\objects\program2.o -IC:\Keil_v5\ARM\RV31\INC 
-IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 524" --list=.\listings\program2.lst program2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

doGCD 00000090

Symbol: doGCD
   Definitions
      At line 55 in file program2.s
   Uses
      At line 17 in file program2.s
      At line 59 in file program2.s

doRegister 00000038

Symbol: doRegister
   Definitions
      At line 23 in file program2.s
   Uses
      At line 15 in file program2.s
Comment: doRegister used once
end 000000A8

Symbol: end
   Definitions
      At line 65 in file program2.s
   Uses
      None
Comment: end unused
program2 00000000

Symbol: program2
   Definitions
      At line 1 in file program2.s
   Uses
      None
Comment: program2 unused
start 00000000

Symbol: start
   Definitions
      At line 3 in file program2.s
   Uses
      None
Comment: start unused
tempaddr1 000000A4

Symbol: tempaddr1
   Definitions
      At line 63 in file program2.s
   Uses
      At line 24 in file program2.s
Comment: tempaddr1 used once
6 symbols
338 symbols in table
